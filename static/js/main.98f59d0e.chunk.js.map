{"version":3,"sources":["movies.js","displayMovies.js","profile.js","header.js","Search.js","CurrentMovie.js","App.js","serviceWorker.js","index.js"],"names":["Movies","state","movies","_this2","this","Axios","get","then","response","lmovies","data","results","map","movie","setState","props","getMovies","catch","error","console","log","React","Component","DisplayMovies","Info","display","search","displayInfoFun","bgd1","backgroundSize","background","concat","poster_path","zIndex","react_default","a","createElement","className","id","onClick","_this","sendMovies","style","margin","title","overview","release_date","vote_average","clearSearch","updatInfo","CSearch","info","index","key","src","alt","original_title","forEach","element","width","lib_default","Object","assign","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","centerPadding","swipeToSlide","Profile","addToWatched","border","height","length","marginTop","Header","updateSearch","event","target","value","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","goHome","goTolist","goToWatched","onSubmit","preventDefault","placeholder","onChange","Search","searchList","searchData","getSearchList","App","userMovies","userWatched","toWatchPage","watchedPage","searchPage","newMovies","newSearchList","m","cloneUserM","slice","includes","alert","push","s","cloneOfuserMovies","indexOf","splice","oldUserWatched","header","displayMovies","src_Search","profile","src_movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98f59d0e.chunk.js","sourcesContent":["import React from 'react';\nimport Axios from 'axios'\nclass Movies extends React.Component {\n    state = {\n        movies: []\n    }\n    componentDidMount() {\n        Axios.get('https://api.themoviedb.org/3/discover/movie?api_key=b7448ea989f409a3183b9cfb44f61afb&sort_by=popularity.desc')\n            .then(response => {\n                \n                // console.log(response)\n\n                let lmovies = response.data.results.map(movie => movie)\n                this.setState({ movies: lmovies });\n                this.props.getMovies(this.state.movies)\n\n            })\n            .catch(error => console.log(error))\n        }\n    render(){\n        \n        return null;\n    }\n}\n\nexport default Movies;\n\n\n","import React from 'react'\n// import ReactDOM from 'react-dom';\nimport Slider from \"react-slick\";\n\nclass DisplayMovies extends React.Component {\n    state= {\n        Info : {},\n        display : false,\n        search : ''\n    }\n\n\n    displayInfoFun = (movie) => {\n        const settings2 = {\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplay: false,\n            swipeToSlide: false\n\n        }\n        let style= {\n            margin: '40% 0'\n        }\n        let bgd1 = {\n            backgroundSize: 'cover',\n            background: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path}) center no-repeat `,\n            zIndex: '1'\n        // backgroundPosition: 'center',\n        }\n        \n        return <div className='container info'>\n            <div className='row'>\n               \n                <div className='col-1 buttons' id='addB' onClick={() => this.props.sendMovies(movie)}>\n                \n                    \n                </div>\n                <div className=\"col \" style={bgd1}></div>\n                <div className=\"col d2\">\n                    <h1 style={style}>{movie.title}</h1>\n                    <p>{movie.overview}</p>\n                    <p>Release: {movie.release_date}</p>\n                    <p>Rating: {movie.vote_average}</p>\n                </div>\n                <div ><button id=\"b2\" className='bttn' onClick={() => {\n                    this.props.clearSearch();//onClick multiple callBack , props not passed\n                    this.setState({display: false})\n                }}>X</button></div>\n                </div>\n                <div className='row'><div className='col -l'>\n                \n                </div>\n                </div>\n            \n        </div>\n        // console.log('hhheerre',movie);\n        \n    }\n    updatInfo = (movie) =>{\n        console.log(movie);\n        \n        this.setState({Info : movie, display: true});\n    }\n    CSearch = () => {\n        \n        this.props.clearSearch()\n    }\n\n    render(){\n\n        // this.setState({ search: newSearch})\n        let info = null;\n        if (this.state.display)\n        info = this.displayInfoFun(this.state.Info);\n\n        let movies = this.props.movies.map((movie, index) => {\n            \n            \n            return <div key={index}>\n            \n            \n                <img onClick={() => this.updatInfo(movie)} className='sliderImg' src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.original_title} />\n                </div>\n        });\n        this.props.movies.forEach(element => {\n            // if(element.video === false)\n            // console.log(element);\n            \n        });\n        // console.log(movies);\n        \n        const settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 4,\n            slidesToScroll: 3,\n            autoplay: true,\n            className: \"center\",\n            centerPadding: \"60px\",\n            swipeToSlide: true\n\n        };\n       \n        \n        return (\n        <div style={{width: '96%'}} >\n             <center><Slider className='DMovies' {...settings}>\n                {movies}\n            </Slider></center>\n            {info}\n            \n            </div>\n        )\n        \n    }\n}\n\nexport default DisplayMovies;","import React from 'react';\nimport Slider from \"react-slick\";\n\nclass Profile extends React.Component {\n    \n\n    addToWatched = () =>{\n\n    }\n    render(){\n        \n        let movies = this.props.movies.map((movie,index) => \n        <div key={index} style={{ display: 'flex', border: '1px solid black' }}>\n            <div className='toWatchImg'>\n              <img width='40%' height='auto' src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.original_title} />\n            </div>\n\n            <div className='movieInfo'>\n              <h1>{movie.title}</h1>\n              <p>{movie.overview}</p>\n                    <p>Release: {movie.release_date}</p>\n              <p>Rating: {movie.vote_average}</p>\n             \n                   <button onClick={()=>this.props.addToWatched(movie)}>Watched</button>\n            </div>\n            \n        </div>)\n        console.log(this.props.movies[0]);\n        console.log(this.props.movie);\n        \n        const settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplay: true,\n            className: \"center\",\n            // centerPadding: \"60px\",\n            swipeToSlide: true\n\n        };\n        let theReturn;\n        if (this.props.movies.length !== 0){\n            theReturn = <center style={{ marginTop: '50px' }}><Slider style={{ margin: 'auto' }} {...settings}>\n                {movies}\n            </Slider></center>\n        } else {\n            theReturn= <h1 style={{marginTop: '15px'}}>No thing to Show</h1>\n        }\n        return theReturn;\n    }\n}\n\nexport default Profile;","import React from 'react';\n\nclass Header extends React.Component {\n    state = {\n        search : ''\n    }\n    updateSearch = (event) => {\n        this.setState({ search: event.target.value })\n    }\n    render(){\n\n        return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">Movies To Watch</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\" onClick={this.props.goHome}>Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" onClick={this.props.goTolist} href=\"#\">My List</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" onClick={this.props.goToWatched} href=\"#\">Watched List</a>\n                    </li>\n\n                    \n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={(event) => {\n                     this.props.search(this.state.search);\n                     this.setState({search : ''})\n                      event.preventDefault()}}>\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={this.state.search} onChange={this.updateSearch} />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n    }\n}\n\nexport default Header;","import React from 'react'\nimport Axios from 'axios'\nclass Search extends React.Component {\n    state = {\n        searchList : []\n    }\n    componentDidMount() {\n        Axios.get(`https://api.themoviedb.org/3/search/movie?api_key=b7448ea989f409a3183b9cfb44f61afb&query=${this.props.searchData}`)\n            .then(response => {\n                console.log(this.props.searchData, ' ', response);\n                \n                let movies = response.data.results.map(movie => movie);\n                this.setState({ searchList: movies });\n                this.props.getSearchList(this.state.searchList)\n                console.log(this.state.searchList);\n                \n            })\n            .catch(error => console.log(error))\n    }\n    render(){\n\n        return <h1>Hello</h1>\n    }\n}\n\nexport default Search;","import React from 'react';\n\nclass CurrentMovie extends React.Component {\n\n    render(){\n\n        return <h1>Here I am</h1>\n    }\n}\n\nexport default CurrentMovie ;","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import 'react-bootstrap';\nimport \"bootstrap\";\nimport \"./App.css\";\nimport Movies from \"./movies\";\nimport DisplayMovies from \"./displayMovies\";\nimport Profile from \"./profile\";\nimport Header from \"./header\";\nimport CurrentMovie from \"./CurrentMovie\";\nimport Search from \"./Search\";\n\nclass App extends Component {\n  state = {\n    movies: [],\n    userMovies: [],\n    userWatched: [],\n    search: \"\",\n    toWatchPage: false,\n    watchedPage: false,\n    searchPage: false,\n    searchList: []\n  };\n\n  getMovies = newMovies => {\n    this.setState({ movies: newMovies });\n  };\n\n  getSearchList = newSearchList => {\n    this.setState({ searchList: newSearchList})\n  }\n\n  sendMovies = m => {\n    console.log(\"woow\", m);\n\n    let cloneUserM = this.state.userMovies.slice(0);\n    if (cloneUserM.includes(m)) alert(\"you have it\");\n    else cloneUserM.push(m);\n\n    this.setState({ userMovies: cloneUserM });\n  };\n  search = s => {\n    this.setState({ toWatchPage: false, watchedPage: false, searchPage: true });\n    this.setState({ search: s });\n  };\n  clearSearch = () => {\n    this.setState({ search: \"\" });\n    this.goHome();\n  };\n  goHome = () => {\n    this.setState({\n      toWatchPage: false,\n      watchedPage: false,\n      searchPage: false\n    });\n  };\n\n  goTolist = () => {\n    this.setState({ toWatchPage: true, watchedPage: false, searchPage: false });\n  };\n  addToWatched = movie => {\n    let cloneOfuserMovies = this.state.userMovies.slice(0);\n    let indexOf = cloneOfuserMovies.indexOf(movie);\n    cloneOfuserMovies.splice(indexOf, 1);\n\n    let oldUserWatched = this.state.userWatched.slice(0);\n    oldUserWatched.push(movie);\n    this.setState({\n      userWatched: oldUserWatched,\n      userMovies: cloneOfuserMovies\n    });\n  };\n  goToWatched = () => {\n    this.setState({ toWatchPage: false, watchedPage: true, searchPage: false });\n  };\n\n  render() {\n    if (this.state.searchPage) {\n      return (\n        <div>\n          <Header\n            search={this.search}\n            goHome={this.goHome}\n            goTolist={this.goTolist}\n            goToWatched={this.goToWatched}\n          />\n\n          <h1>Top Rated Movies</h1>\n          <DisplayMovies\n            clearSearch={this.clearSearch}\n            search={this.state.search}\n            movies={this.state.searchList}\n            sendMovies={this.sendMovies}\n          />\n          <h1>Search</h1>\n          <Search getSearchList={this.getSearchList} searchData={this.state.search} />\n\n          {/* <CurrentMovie /> */}\n        </div>\n      );\n    } else if (this.state.toWatchPage) {\n      return (\n        <div>\n          <Header\n            search={this.search}\n            goHome={this.goHome}\n            goToWatched={this.goToWatched}\n          />\n\n          <Profile\n            addToWatched={this.addToWatched}\n            movies={this.state.userMovies}\n          />\n        </div>\n      );\n    } else if (this.state.watchedPage) {\n      return (\n        <div>\n          <Header\n            search={this.search}\n            goHome={this.goHome}\n            goTolist={this.goTolist}\n          />\n          <Profile\n            addToWatched={this.addToWatched}\n            movies={this.state.userWatched}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Header\n            search={this.search}\n            goHome={this.goHome}\n            goTolist={this.goTolist}\n            goToWatched={this.goToWatched}\n          />\n\n          <h1> Top Rated Movies</h1>\n          <Movies getMovies={this.getMovies} />\n          <DisplayMovies\n            clearSearch={this.clearSearch}\n            search={this.state.search}\n            movies={this.state.movies}\n            sendMovies={this.sendMovies}\n          />\n\n          {/* <CurrentMovie /> */}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport \"../node_modules/jquery/dist/jquery\";\n// import \"../node_modules/popper.js/dist/popper\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap\";\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}